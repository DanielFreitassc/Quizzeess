spring:
    application:
        name: backend
# H2 Database
    datasource:
        url: jdbc:h2:mem:/db 
        username: admin
        password: 

    cache:
        type: jcache
        jcache:
            provider: com.hazelcast.cache.impl.HazelcastServerCachingProvider
            config: classpath:hazelcast.xml
#JWT
api:
    security:
        token:
            secret: ${JTW_SECRET:my-secret-key}
#Admin
admin:
    username: ${ADMIN_USERNAME:admin}
    password: ${ADMIN_PASSWORD:admin}
bucket4j:
  enabled: true
  filters:
  - cache-name: filterConfigCache
    url: .*
    filter-order: 100
    rate-limits:
      - execute-condition: "@securityService.authenticated()"
        expression: "@securityService.username()"
        bandwidths: 
            - capacity: 60
              time: 1
              unit: minutes
  - cache-name: filterConfigCache
    url: /auth/login
    filter-order: 200 
    rate-limits:
      - execute-condition: "@securityService.isNotAuthenticated()"
        expression: "@ipExtractor.getClientIp(request)"
        bandwidths: 
            - capacity: 5
              time: 1
              unit: minutes
              refill-speed: 1
              burst-time: 60
  - cache-name: filterConfigCache
    url: /users
    filter-order: 200 
    rate-limits:
      - execute-condition: "@securityService.isNotAuthenticated()"
        expression: "@ipExtractor.getClientIp(request)"
        bandwidths: 
            - capacity: 5
              time: 1
              unit: minutes
              refill-speed: interval
